{"version":3,"sources":["webpack:///./pages/c/_cluster/auth/config/index.vue","webpack:///./pages/c/_cluster/auth/config/index.vue?3b8e","webpack:///pages/c/_cluster/auth/config/index.vue","webpack:///./pages/c/_cluster/auth/config/index.vue?1452"],"names":["component","components","data","resource","schema","hasListComponent","hasEditComponent","nonLocal","computed","rows","methods","colorFor","goTo","this","$router","push","name","params","query","render","_vm","_h","$createElement","_c","_self","attrs","on","row","id","staticRenderFns"],"mappings":"4FAAA,sIAOIA,UAAY,YACd,UACA,IACA,KACA,EACA,KACA,KACA,MAIa,UAAAA,U,2CClBf,0HAAgV,YAAG,G,wLCCnV,WACA,aACA,QACA,Q,EAEA,CACEC,WAAY,CAAd,0BAEE,UAHF,YAGA,uMACA,iEADA,UACA,EADA,OAEA,kDAGA,KAFA,iDAEA,OALA,wBAMA,GACA,gCACA,sBARA,kBAWA,cAXA,iCAaA,cAbA,+CAiBEC,KApBF,WAqBI,IAAJ,2BACA,sBACA,2BACA,iCACA,iCAGI,MAAO,CACLC,SAAN,EACMC,OAJN,gCAKMC,iBAAN,EACMC,iBAAN,EAGMC,SAAU,OAIdC,SAAU,CACRC,KADJ,WAEM,OAAO,EAAb,uDAIEC,QAAS,CACPC,SADJ,SACA,GACM,IAEN,EAFA,wBAEA,sBAEM,OAAN,IAAU,EACK,SAGF,QAAb,aAGIC,KAbJ,SAaA,GACMC,KAAKC,QAAQC,KAAK,CAChBC,KAAM,2BACNC,OAAQ,CAAhB,MACQC,OAAO,EAAf,mC,mHCpEA,IAAIC,EAAS,WAAa,IAAIC,EAAIP,KAASQ,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,iBAAiB,CAACE,MAAM,CAAC,KAAOL,EAAIX,KAAK,YAAYW,EAAIT,SAAS,aAAa,eAAee,GAAG,CAAC,QAAU,SAAUC,GAAO,OAAOP,EAAIR,KAAKe,EAAIC,SAAW,IACrQC,EAAkB","file":"pages/c/_cluster/auth/config/index.37027d943c7c74167df0.js","sourcesContent":["import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=20a34f28&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--5-0!../../../../../node_modules/thread-loader/dist/cjs.js??ref--5-1!../../../../../node_modules/babel-loader/lib/index.js??ref--5-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--5-0!../../../../../node_modules/thread-loader/dist/cjs.js??ref--5-1!../../../../../node_modules/babel-loader/lib/index.js??ref--5-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","<script>\nimport { MANAGEMENT } from '@/config/types';\nimport SelectIconGrid from '@/components/SelectIconGrid';\nimport { sortBy } from '@/utils/sort';\nimport { MODE, _EDIT } from '@/config/query-params';\n\nexport default {\n  components: { SelectIconGrid },\n\n  async asyncData({ route, redirect, store }) {\n    const rows = await store.dispatch(`management/findAll`, { type: MANAGEMENT.AUTH_CONFIG });\n    const nonLocal = rows.filter(x => x.name !== 'local');\n    const enabled = nonLocal.filter(x => x.enabled === true );\n\n    if ( enabled.length === 1 ) {\n      redirect({\n        name:   'c-cluster-auth-config-id',\n        params: { id: enabled[0].id }\n      });\n\n      return { nonLocal };\n    } else {\n      return { nonLocal };\n    }\n  },\n\n  data() {\n    const resource = MANAGEMENT.AUTH_CONFIG;\n    const getters = this.$store.getters;\n    const inStore = getters['currentProduct'].inStore;\n    const hasListComponent = getters['type-map/hasCustomList'](resource);\n    const hasEditComponent = getters['type-map/hasCustomEdit'](resource);\n    const schema = getters[`${ inStore }/schemaFor`](resource);\n\n    return {\n      resource,\n      schema,\n      hasListComponent,\n      hasEditComponent,\n\n      // Provided by asyncData later\n      nonLocal: null,\n    };\n  },\n\n  computed: {\n    rows() {\n      return sortBy(this.nonLocal, ['sideLabel', 'nameDisplay']);\n    },\n  },\n\n  methods: {\n    colorFor(row) {\n      const types = ['ldap', 'oauth', 'saml'];\n\n      const idx = types.indexOf(row.configType);\n\n      if ( idx === -1 ) {\n        return 'color8';\n      }\n\n      return `color${ idx + 1 }`;\n    },\n\n    goTo(id) {\n      this.$router.push({\n        name:   'c-cluster-auth-config-id',\n        params: { id },\n        query:  { [MODE]: _EDIT }\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <SelectIconGrid\n      :rows=\"rows\"\n      :color-for=\"colorFor\"\n      name-field=\"nameDisplay\"\n      @clicked=\"(row) => goTo(row.id)\"\n    />\n  </div>\n</template>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('SelectIconGrid',{attrs:{\"rows\":_vm.rows,\"color-for\":_vm.colorFor,\"name-field\":\"nameDisplay\"},on:{\"clicked\":function (row) { return _vm.goTo(row.id); }}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}