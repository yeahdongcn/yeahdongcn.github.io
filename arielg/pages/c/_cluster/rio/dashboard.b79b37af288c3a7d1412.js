(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{3945:function(n,e,t){"use strict";t.r(e);var r=t(4474),o=t(4146);for(var d in o)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return o[n]}))}(d);t(4341);var l=t(0),component=Object(l.a)(o.default,r.a,r.b,!1,null,"5f15b29b",null);e.default=component.exports},4146:function(n,e,t){"use strict";t.r(e);var r=t(4147),o=t.n(r);for(var d in r)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return r[n]}))}(d);e.default=o.a},4147:function(n,e,t){"use strict";var r=t(5);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,t(1),t(2),t(3),t(4);var o=r(t(4332)),d=r(t(4335)),l=r(t(4338)),c={components:{AspectPreserver:o.default,ProgressArc:l.default,LinePlot:d.default},data:function(){return{set1:{points:[0,5,4,3,8],domain:[0,5e3]},set2:{points:[0,0,0,0,0],domain:[0,100]},set3:{points:[0,0,0,0,0],domain:[0,10]},mostlyZeroes:{points:[0,0,1,0,0],domain:[0,10]},random:this.update(),interval:1e3}},methods:{update:function(){var n=this;return this.set1&&(this.set1.points.push(5e3*Math.random()),this.set1.points.shift()),this.set2&&(this.set2.points.push(100*Math.random()),this.set2.points.shift()),this.set3&&(this.set3.points.push(10*Math.random()),this.set3.points.shift()),this.timer=setTimeout((function(){n.update()}),this.interval),this.random}}};e.default=c},4148:function(n,e,t){"use strict";t.r(e);var r=t(4149),o=t.n(r);for(var d in r)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return r[n]}))}(d);e.default=o.a},4149:function(n,e,t){"use strict";var r=t(123);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,t(1),t(2),t(3),t(4);var o=r(t(4e3)),d={props:{aspectRatio:{type:Array,default:function(){return[4,3]}}},data:function(){return{isMounted:!1}},computed:{graphWidth:function(){return this.isMounted?o.select(this.$refs.outer).node().getBoundingClientRect().width:0},graphHeight:function(){return this.isMounted?o.select(this.$refs.inner).node().getBoundingClientRect().height:0}},mounted:function(){this.isMounted=!0}};e.default=d},4150:function(n,e,t){var content=t(4334);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(10).default)("62528e0b",content,!0,{sourceMap:!0})},4151:function(n,e,t){"use strict";t.r(e);var r=t(4152),o=t.n(r);for(var d in r)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return r[n]}))}(d);e.default=o.a},4152:function(n,e,t){"use strict";var r=t(123);t(13),t(19),t(124),t(47),t(14),Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,t(1),t(2),t(3),t(4);var o=r(t(4e3)),d={props:{graphWidth:{type:Number,required:!0},graphHeight:{type:Number,required:!0},dataSets:{type:Array,default:function(){return[]}},ticks:{type:Number,default:6},interval:{type:Number,default:0}},data:function(){return{initial:0}},computed:{ellapsedTime:function(){return(Date.now()-this.initial)/1e3},largestSetSize:function(){return this.dataSets.map((function(n){return n.points.length})).reduce((function(a,b){return Math.max(a,b)}))},lines:function(){for(var n=this,e=this,t=[],r=function(i){var r=n.dataSets[i].points,d=n.dataSets[i].domain,l=[0,10],path=o.line().x((function(n,i){return e.scaleX(l,i)})).y((function(n){return e.scaleY(d,n)}));t.push(path(r))},i=0;i<this.dataSets.length;i++)r(i);return t}},watch:{dataSets:{handler:function(n,e){var t=this;e.forEach((function(n,i){var e=o.selectAll(".lines--".concat(i)).selectAll("*").nodes();e&&e.forEach((function(element){return t.animateLine(element)}))}))},deep:!0},graphHeight:function(){this.dataSets[0]&&this.makeYAxis(this.dataSets[0])}},mounted:function(){var n=this;setInterval((function(){n.initial++}),1e3)},methods:{animateLine:function(n){if(0!==this.interval){console.log("animating...");var e=this.scaleX([0,10],0);n.animate([{transform:" translateX(0px)"},{transform:"translateX(-".concat(e,"px)")}],this.interval)}},makeYAxis:function(n){var e=n.domain,t=o.scaleLinear().domain(e).range([0,this.graphHeight]),r=o.axisLeft(t).ticks(this.ticks).tickSize(-this.graphWidth,0,0).tickFormat("");o.select(this.$refs.svg).select(".grid").call(r)},scaleX:function(n,e){return o.scaleLinear().domain(n).range([0,this.graphWidth])(e)},scaleY:function(n,e){return o.scaleLinear().domain(n).range([this.graphHeight,0])(e)}}};e.default=d},4153:function(n,e,t){var content=t(4337);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(10).default)("541aca0e",content,!0,{sourceMap:!0})},4154:function(n,e,t){"use strict";t.r(e);var r=t(4155),o=t.n(r);for(var d in r)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return r[n]}))}(d);e.default=o.a},4155:function(n,e,t){"use strict";var r=t(123);t(19),t(47),t(1710),Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,t(1),t(2),t(3),t(4);var o=r(t(4e3)),d={props:{progress:{type:Number,default:0},graphWidth:{type:Number,required:!0}},data:function(){return{tweenedProgress:this.progress}},computed:{progressColor:function(){var n=this,e=[127,189,132];return[189,127,127].map((function(t,i){return(t+(e[i]-t)*n.progress/100).toFixed(0)}))},outerRadius:function(){return this.graphWidth/2},innerRadius:function(){return this.outerRadius-.05*this.graphWidth},endAngle:function(){return 2*this.tweenedProgress*Math.PI/100},fullArc:function(){return o.arc()({innerRadius:this.innerRadius,outerRadius:this.outerRadius,endAngle:2*Math.PI,startAngle:0})},arc:function(){var n=o.arc();return n({innerRadius:this.innerRadius,outerRadius:this.outerRadius,endAngle:this.endAngle,startAngle:0})}},watch:{progress:function(n,e){this.tweenedProgress=n}}};e.default=d},4156:function(n,e,t){var content=t(4340);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(10).default)("19c83675",content,!0,{sourceMap:!0})},4157:function(n,e,t){var content=t(4342);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(10).default)("1deedf32",content,!0,{sourceMap:!0})},4332:function(n,e,t){"use strict";t.r(e);var r=t(4491),o=t(4148);for(var d in o)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return o[n]}))}(d);t(4333);var l=t(0),component=Object(l.a)(o.default,r.a,r.b,!1,null,"3dc37251",null);e.default=component.exports},4333:function(n,e,t){"use strict";var r=t(4150);t.n(r).a},4334:function(n,e,t){(e=t(9)(!0)).push([n.i,'.clearfix[data-v-3dc37251]:after,.clearfix[data-v-3dc37251]:before{content:" ";display:table}.clearfix[data-v-3dc37251]:after{clear:both}.list-unstyled[data-v-3dc37251]{margin:0;padding:0;list-style-type:none}.no-select[data-v-3dc37251]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize[data-v-3dc37251]{resize:none}.hand[data-v-3dc37251]{cursor:pointer;cursor:hand}.fixed[data-v-3dc37251]{table-layout:fixed}.clip[data-v-3dc37251]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-3dc37251],.force-wrap[data-v-3dc37251]{word-wrap:break-word}.force-wrap[data-v-3dc37251]{white-space:normal}.bordered-section[data-v-3dc37251]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-3dc37251]{margin-bottom:20px;margin-top:20px}.aspect--outer[data-v-3dc37251]{width:100%;height:100%;position:relative}.aspect--inner[data-v-3dc37251]{overflow:hidden;height:0;position:relative}.aspect--svg[data-v-3dc37251]{position:absolute;height:100%;width:100%;left:0;top:0}',"",{version:3,sources:["/home/sangfor/harvester-ui/components/graph/AspectPreserver.vue"],names:[],mappings:"AAmLE,mEAEE,WAAY,CACZ,aAAc,CACf,iCAEC,UAAW,CACZ,gCAID,QAAS,CACT,SAAU,CACV,oBAAqB,CA+CsB,4BA3C3C,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBAAiB,CAyCsB,4BArCvC,WAAa,CAsC0B,uBAlCvC,cAAgB,CAChB,WAAa,CAkCqB,wBA9BlC,kBAAoB,CA+Be,uBA3BnC,sBAAwB,CACxB,eAAsB,CACtB,kBAC0B,CAyBQ,oDAzBlC,oBAKmB,CAoBe,6BApBlC,kBAAmB,CAqBqB,mCAjBxC,qCAAsC,CACtC,kBAAmB,CACnB,mBAAoB,CAgB0B,kCAZ9C,kBAAmB,CACnB,eAAgB,CAY6B,gCA4I3C,UAAW,CACX,WAAY,CACZ,iBAAkB,CACnB,gCAEG,eAAgB,CAChB,QAAS,CACT,iBAAkB,CACnB,8BAEC,iBAAkB,CAClB,WAAY,CACZ,UAAW,CACX,MAAO,CACP,KAAM",file:"AspectPreserver.vue",sourcesContent:["$max-width: 1440px !default;\n$min-width: 75% !default;\n$input-height: 55px;\n// $input-height-small: 35px;\n\n$column-gutter: 1.75%;\n\n$sideways-tabs-width: 200px;\n\n$z-indexes: (\n  zero: 0,\n  default: 1,\n  overContent: 2,\n  hoverOverContent: 3,\n\n  tableGroup: 10,\n  fixedTableHeader: 11,\n\n  modalOverlay: 20,\n  modalContent: 21,\n\n  tooltip: 30,\n\n  dropdownOverlay: 40,\n  dropdownContent: 41,\n\n  loadingOverlay: 50,\n  loadingContent: 51\n);\n\n// Usage Example:\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\n// }\n$breakpoints: (\n  '--viewport-4':  480px,\n  '--viewport-7':  768px,\n  '--viewport-9':  992px,\n  '--viewport-12': 1281px,\n);\n\n///Computes the \"brightness\" of a color\n@function brightness($color) {\n  @if type-of($color) == color {\n    @return (red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114) / 255 * 100%;\n  }\n  @else {\n    @return unquote(\"brightness(#{$color})\");\n  }\n}\n\n\n///Select the more readable foreground color for a given background color.\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  @if $color == null {\n    @return null;\n  }\n  @else {\n    $color-brightness: brightness($color);\n    $dark-text-brightness: brightness($dark);\n    $light-text-brightness: brightness($light);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function add-z-index($key, $value) {\n  @return map-merge($z-indexes, ($key: $value));\n}\n\n@function z-index($key) {\n  @if map-has-key($z-indexes, $key) {\n    @return map-get($z-indexes, $key);\n  }\n\n  @warn \"Unknown key `#{$key}` in $z-indexes\";\n  @return null;\n}\n\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n      @warn '#{ $number } is not a number.';\n      @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n      @warn '#{ $digits } is not a number.';\n      @return $number;\n  } @else if not unitless($digits) {\n      @warn '#{ $digits } has a unit.';\n      @return $number;\n  }\n  @for $i from 1 through $digits {\n      $n: $n * 10;\n  }\n  @if $mode == round {\n      @return round($number * $n) / $n;\n  } @else if $mode == ceil {\n      @return ceil($number * $n) / $n;\n  } @else if $mode == floor {\n      @return floor($number * $n) / $n;\n  } @else {\n      @warn '#{ $mode } is undefined keyword.';\n      @return $number;\n  }\n}\n\n// Ceil a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A ceiled number\n// @example\n//     decimal-ceil(0.333)    => 1\n//     decimal-ceil(0.333, 1) => 0.4\n//     decimal-ceil(0.333, 2) => 0.34\n//     decimal-ceil(0.666)    => 1\n//     decimal-ceil(0.666, 1) => 0.7\n//     decimal-ceil(0.666, 2) => 0.67\n//\n@function decimal-ceil ($number, $digits: 0) {\n  @return decimal-round($number, $digits, ceil);\n}\n\n// Floor a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A floored number\n// @example\n//     decimal-floor(0.333)    => 0\n//     decimal-floor(0.333, 1) => 0.3\n//     decimal-floor(0.333, 2) => 0.33\n//     decimal-floor(0.666)    => 0\n//     decimal-floor(0.666, 1) => 0.6\n//     decimal-floor(0.666, 2) => 0.66\n//\n@function decimal-floor ($number, $digits: 0) {\n  @return decimal-round($number, $digits, floor);\n}\n\n@function sizzle-gradient($color) {\n  $angle: 135deg;\n  $startPos: 0%;\n  $start: 0.3;\n  $middlePos: 110px;\n  $middle: 0.1;\n  $endPos: 100%;\n  $end: 0;\n\n  @return transparent linear-gradient(#{$angle},\n      #{rgba($color, $start)} #{$startPos},\n      #{rgba($color, $middle)} #{$middlePos},\n      #{rgba($color, $end)} #{$endPos}\n  ) 0% 0% no-repeat padding-box;\n}\n\n// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/// Clear inner floats\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \" \"; // 1\n    display: table; // 2\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n@mixin list-unstyled {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n@mixin no-select {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin no-resize {\n  resize : none;\n}\n\n@mixin hand {\n  cursor : pointer;\n  cursor : hand;\n}\n\n@mixin fixed {\n  table-layout : fixed;\n}\n\n@mixin clip {\n  text-overflow : ellipsis;\n  overflow      : hidden;\n  white-space   : nowrap;\n  word-wrap     : break-word;\n}\n\n@mixin force-wrap {\n  word-wrap : break-word;\n  white-space: normal;\n}\n\n@mixin bordered-section {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n@mixin section-divider {\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.clearfix         { @include clearfix; }\n.list-unstyled    { @include list-unstyled }\n.no-select        { @include no-select }\n.no-resize        { @include no-resize }\n.hand             { @include hand }\n.fixed            { @include fixed }\n.clip             { @include clip }\n.force-wrap       { @include force-wrap }\n.bordered-section { @include bordered-section }\n.section-divider  { @include section-divider }\n\n/// Sets the specified background color and calculates a dark or light contrasted text color.\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  color: contrast-color($background-color, $dark, $light);\n\n  &:hover {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n/// Sets base color and darkens bg on hover\n@mixin bg-lighten($bg) {\n  background: $bg;\n  * {\n    background:lighten($bg,20%);\n  }\n}\n\n@mixin link-color($color, $hover) {\n  @if not($hover) {\n    $hover: $color;\n  }\n\n  color: $color;\n\n  &:hover\n   {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n@mixin icon-rotate($degrees, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: rotate($degrees);\n      -ms-transform: rotate($degrees);\n          transform: rotate($degrees);\n}\n\n@mixin icon-flip($horiz, $vert, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: scale($horiz, $vert);\n      -ms-transform: scale($horiz, $vert);\n          transform: scale($horiz, $vert);\n}\n\n@mixin input-status-color {\n  &:not(.focused) {\n    &.success {\n      border: solid 1px var(--success);\n      input, .selected {\n        color: var(--success);\n      }\n\n      .vs__actions:after {\n        color: var(--success);\n      }\n    }\n\n    &.warning {\n      border: solid 1px var(--warning);\n      input, .selected {\n        color: var(--warning);\n      }\n\n      .vs__actions:after {\n        color: var(--warning);\n      }\n    }\n\n    &.error {\n      border: solid 1px var(--error);\n      input, .selected {\n        color: var(--error);\n      }\n\n      .vs__actions:after {\n        color: var(--error);\n      }\n    }\n  }\n}\n\n@mixin form-focus {\n  // Focus for form like elements (not to be confused with basic :focus style)\n  outline: none;\n  box-shadow: 0 0 0 var(--outline-width) var(--outline);\n  background: var(--input-focus-bg)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.aspect{\n  &--outer{\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n    &--inner{\n      overflow: hidden;\n      height: 0;\n      position: relative;\n    }\n    &--svg {\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      left: 0;\n      top: 0;\n    }\n}\n\n"]}]),n.exports=e},4335:function(n,e,t){"use strict";t.r(e);var r=t(4492),o=t(4151);for(var d in o)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return o[n]}))}(d);t(4336);var l=t(0),component=Object(l.a)(o.default,r.a,r.b,!1,null,null,null);e.default=component.exports},4336:function(n,e,t){"use strict";var r=t(4153);t.n(r).a},4337:function(n,e,t){(e=t(9)(!0)).push([n.i,'.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}.list-unstyled{margin:0;padding:0;list-style-type:none}.no-select{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize{resize:none}.hand{cursor:pointer;cursor:hand}.fixed{table-layout:fixed}.clip{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip,.force-wrap{word-wrap:break-word}.force-wrap{white-space:normal}.bordered-section{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider{margin-bottom:20px;margin-top:20px}.bg-transparent{background-color:transparent}.bg-disabled{background-color:var(--disabled-bg)!important;color:var(--disabled-text)!important}svg.lineplot{overflow:hidden}.line{fill:none;stroke:#64399a;stroke-width:2px}.data-circle{fill:#1b1c21;stroke:#64399a}g:nth-of-type(2n) *{stroke:#306990}.grid .tick line{stroke:#fff;opacity:.25}.grid path{stroke-width:0}',"",{version:3,sources:["/home/sangfor/harvester-ui/components/graph/LinePlot.vue","/home/sangfor/harvester-ui/assets/styles/base/_color.scss"],names:[],mappings:"AAmLE,iCAEE,WAAY,CACZ,aAAc,CACf,gBAEC,UAAW,CACZ,eAID,QAAS,CACT,SAAU,CACV,oBAAqB,CA+CsB,WA3C3C,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBAAiB,CAyCsB,WArCvC,WAAa,CAsC0B,MAlCvC,cAAgB,CAChB,WAAa,CAkCqB,OA9BlC,kBAAoB,CA+Be,MA3BnC,sBAAwB,CACxB,eAAsB,CACtB,kBAC0B,CAyBQ,kBAzBlC,oBAKmB,CAoBe,YApBlC,kBAAmB,CAqBqB,kBAjBxC,qCAAsC,CACtC,kBAAmB,CACnB,mBAAoB,CAgB0B,iBAZ9C,kBAAmB,CACnB,eAAgB,CAY6B,gBCxL7C,4BAA6B,CAC9B,aAGC,6CAA+C,CAC/C,oCAAsC,CDmbpC,aACE,eAAgB,CACjB,MAGG,SAAU,CACV,cAAe,CACf,gBAAiB,CACpB,aAGG,YAAa,CACb,cAAe,CAClB,oBAGK,cAAe,CACpB,iBAGG,WAAa,CACb,WAAa,CAChB,WAGC,cAAe",file:"LinePlot.vue",sourcesContent:["$max-width: 1440px !default;\n$min-width: 75% !default;\n$input-height: 55px;\n// $input-height-small: 35px;\n\n$column-gutter: 1.75%;\n\n$sideways-tabs-width: 200px;\n\n$z-indexes: (\n  zero: 0,\n  default: 1,\n  overContent: 2,\n  hoverOverContent: 3,\n\n  tableGroup: 10,\n  fixedTableHeader: 11,\n\n  modalOverlay: 20,\n  modalContent: 21,\n\n  tooltip: 30,\n\n  dropdownOverlay: 40,\n  dropdownContent: 41,\n\n  loadingOverlay: 50,\n  loadingContent: 51\n);\n\n// Usage Example:\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\n// }\n$breakpoints: (\n  '--viewport-4':  480px,\n  '--viewport-7':  768px,\n  '--viewport-9':  992px,\n  '--viewport-12': 1281px,\n);\n\n///Computes the \"brightness\" of a color\n@function brightness($color) {\n  @if type-of($color) == color {\n    @return (red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114) / 255 * 100%;\n  }\n  @else {\n    @return unquote(\"brightness(#{$color})\");\n  }\n}\n\n\n///Select the more readable foreground color for a given background color.\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  @if $color == null {\n    @return null;\n  }\n  @else {\n    $color-brightness: brightness($color);\n    $dark-text-brightness: brightness($dark);\n    $light-text-brightness: brightness($light);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function add-z-index($key, $value) {\n  @return map-merge($z-indexes, ($key: $value));\n}\n\n@function z-index($key) {\n  @if map-has-key($z-indexes, $key) {\n    @return map-get($z-indexes, $key);\n  }\n\n  @warn \"Unknown key `#{$key}` in $z-indexes\";\n  @return null;\n}\n\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n      @warn '#{ $number } is not a number.';\n      @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n      @warn '#{ $digits } is not a number.';\n      @return $number;\n  } @else if not unitless($digits) {\n      @warn '#{ $digits } has a unit.';\n      @return $number;\n  }\n  @for $i from 1 through $digits {\n      $n: $n * 10;\n  }\n  @if $mode == round {\n      @return round($number * $n) / $n;\n  } @else if $mode == ceil {\n      @return ceil($number * $n) / $n;\n  } @else if $mode == floor {\n      @return floor($number * $n) / $n;\n  } @else {\n      @warn '#{ $mode } is undefined keyword.';\n      @return $number;\n  }\n}\n\n// Ceil a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A ceiled number\n// @example\n//     decimal-ceil(0.333)    => 1\n//     decimal-ceil(0.333, 1) => 0.4\n//     decimal-ceil(0.333, 2) => 0.34\n//     decimal-ceil(0.666)    => 1\n//     decimal-ceil(0.666, 1) => 0.7\n//     decimal-ceil(0.666, 2) => 0.67\n//\n@function decimal-ceil ($number, $digits: 0) {\n  @return decimal-round($number, $digits, ceil);\n}\n\n// Floor a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A floored number\n// @example\n//     decimal-floor(0.333)    => 0\n//     decimal-floor(0.333, 1) => 0.3\n//     decimal-floor(0.333, 2) => 0.33\n//     decimal-floor(0.666)    => 0\n//     decimal-floor(0.666, 1) => 0.6\n//     decimal-floor(0.666, 2) => 0.66\n//\n@function decimal-floor ($number, $digits: 0) {\n  @return decimal-round($number, $digits, floor);\n}\n\n@function sizzle-gradient($color) {\n  $angle: 135deg;\n  $startPos: 0%;\n  $start: 0.3;\n  $middlePos: 110px;\n  $middle: 0.1;\n  $endPos: 100%;\n  $end: 0;\n\n  @return transparent linear-gradient(#{$angle},\n      #{rgba($color, $start)} #{$startPos},\n      #{rgba($color, $middle)} #{$middlePos},\n      #{rgba($color, $end)} #{$endPos}\n  ) 0% 0% no-repeat padding-box;\n}\n\n// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/// Clear inner floats\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \" \"; // 1\n    display: table; // 2\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n@mixin list-unstyled {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n@mixin no-select {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin no-resize {\n  resize : none;\n}\n\n@mixin hand {\n  cursor : pointer;\n  cursor : hand;\n}\n\n@mixin fixed {\n  table-layout : fixed;\n}\n\n@mixin clip {\n  text-overflow : ellipsis;\n  overflow      : hidden;\n  white-space   : nowrap;\n  word-wrap     : break-word;\n}\n\n@mixin force-wrap {\n  word-wrap : break-word;\n  white-space: normal;\n}\n\n@mixin bordered-section {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n@mixin section-divider {\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.clearfix         { @include clearfix; }\n.list-unstyled    { @include list-unstyled }\n.no-select        { @include no-select }\n.no-resize        { @include no-resize }\n.hand             { @include hand }\n.fixed            { @include fixed }\n.clip             { @include clip }\n.force-wrap       { @include force-wrap }\n.bordered-section { @include bordered-section }\n.section-divider  { @include section-divider }\n\n/// Sets the specified background color and calculates a dark or light contrasted text color.\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  color: contrast-color($background-color, $dark, $light);\n\n  &:hover {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n/// Sets base color and darkens bg on hover\n@mixin bg-lighten($bg) {\n  background: $bg;\n  * {\n    background:lighten($bg,20%);\n  }\n}\n\n@mixin link-color($color, $hover) {\n  @if not($hover) {\n    $hover: $color;\n  }\n\n  color: $color;\n\n  &:hover\n   {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n@mixin icon-rotate($degrees, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: rotate($degrees);\n      -ms-transform: rotate($degrees);\n          transform: rotate($degrees);\n}\n\n@mixin icon-flip($horiz, $vert, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: scale($horiz, $vert);\n      -ms-transform: scale($horiz, $vert);\n          transform: scale($horiz, $vert);\n}\n\n@mixin input-status-color {\n  &:not(.focused) {\n    &.success {\n      border: solid 1px var(--success);\n      input, .selected {\n        color: var(--success);\n      }\n\n      .vs__actions:after {\n        color: var(--success);\n      }\n    }\n\n    &.warning {\n      border: solid 1px var(--warning);\n      input, .selected {\n        color: var(--warning);\n      }\n\n      .vs__actions:after {\n        color: var(--warning);\n      }\n    }\n\n    &.error {\n      border: solid 1px var(--error);\n      input, .selected {\n        color: var(--error);\n      }\n\n      .vs__actions:after {\n        color: var(--error);\n      }\n    }\n  }\n}\n\n@mixin form-focus {\n  // Focus for form like elements (not to be confused with basic :focus style)\n  outline: none;\n  box-shadow: 0 0 0 var(--outline-width) var(--outline);\n  background: var(--input-focus-bg)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"~assets/styles/base/_color.scss\";\n    svg.lineplot{\n      overflow: hidden;\n    }\n\n    .line {\n        fill: none;\n        stroke: #64399a;\n        stroke-width: 2px;\n    }\n\n    .data-circle {\n        fill: #1b1c21;\n        stroke: #64399a;\n    }\n\n    g:nth-of-type(2n) *{\n          stroke: #306990;\n    }\n\n    .grid .tick line {\n        stroke: white;\n        opacity: 0.25;\n    }\n\n    .grid path {\n      stroke-width: 0;\n    }\n",'@function get-or-def($map, $key, $def) {\n  @if type-of($map) == "map" {\n    @return if(map-has-key($map, $key), map-get($map, $key), $def);\n  } @else {\n    @return $def;\n  }\n}\n\n@mixin color-variables($colors, $write-classes: false) {\n  @each $name, $color in $colors {\n    $default:      get-or-def($color, "default",      $color);\n    $hover-bg:     get-or-def($color, "hover-bg",     darken($default, 10%));\n    $active-bg:    get-or-def($color, "active-bg",    darken($default, 25%));\n    $default-text: get-or-def($color, "default-text", contrast-color($default));\n    $hover-text:   get-or-def($color, "hover-text",   saturate($lightest, 20%));\n    $active-text:  get-or-def($color, "active-text",  contrast-color($active-bg));\n    $border:       get-or-def($color, "border",       $default);\n    $banner-bg:    get-or-def($color, "banner",      rgba($default, 0.15));\n\n    --#{$name}:             #{$default};\n    --#{$name}-text:        #{$default-text};\n    --#{$name}-hover-bg:    #{$hover-bg};\n    --#{$name}-hover-text:  #{$hover-text};\n    --#{$name}-active-bg:   #{$active-bg};\n    --#{$name}-active-text: #{$active-text};\n    --#{$name}-border:      #{$border};\n    --#{$name}-banner-bg:   #{$banner-bg};\n\n    @if $write-classes {\n      .text-#{$name} {\n        color: var(--#{$name}) !important;\n      }\n\n      .bg-#{$name} {\n        background-color: var(--#{$name});\n        color: var(--#{$name}-text);\n\n        &.hollow {\n          color: #{$default};\n          background-color: transparent;\n          border: 1px solid #{$default};\n        }\n\n        &.btn:hover {\n          color: var(--#{$name}-hover-text);\n          background: var(--#{$name}-hover-bg);\n          transition: all 0.3s ease;\n        }\n\n        &.btn:active {\n          color: var(--#{$name}-active-text);\n          background: var(--#{$name}-active-bg);\n        }\n      }\n\n      .border-#{name} {\n        border-color: var(--#{$name}-border);\n      }\n    }\n  }\n}\n\n.bg-transparent {\n  background-color: transparent;\n}\n\n.bg-disabled {\n  background-color: var(--disabled-bg) !important;\n  color: var(--disabled-text) !important;\n}\n']}]),n.exports=e},4338:function(n,e,t){"use strict";t.r(e);var r=t(4493),o=t(4154);for(var d in o)["default"].indexOf(d)<0&&function(n){t.d(e,n,(function(){return o[n]}))}(d);t(4339);var l=t(0),component=Object(l.a)(o.default,r.a,r.b,!1,null,"0d15e0c6",null);e.default=component.exports},4339:function(n,e,t){"use strict";var r=t(4156);t.n(r).a},4340:function(n,e,t){(e=t(9)(!0)).push([n.i,".background[data-v-0d15e0c6]{fill:#fff;opacity:.15}","",{version:3,sources:["/home/sangfor/harvester-ui/components/graph/components/graph/ProgressArc.vue"],names:[],mappings:"AAmFA,6BACA,SAAA,CACA,WACA",file:"ProgressArc.vue",sourcesContent:['<script>\nimport * as d3 from \'d3\';\nexport default {\n  props: {\n    progress: {\n      type:    Number,\n      default: 0\n    },\n    graphWidth:      {\n      type:     Number,\n      required: true\n    },\n  },\n  data() {\n    return { tweenedProgress: this.progress };\n  },\n  computed: {\n    progressColor() {\n      const end = [127, 189, 132];\n      const init = [189, 127, 127];\n\n      return init.map((val, i) => {\n        return (val + ((end[i] - val) * this.progress / 100)).toFixed(0);\n      });\n    },\n    outerRadius() {\n      return this.graphWidth / 2;\n    },\n    innerRadius() {\n      return this.outerRadius - this.graphWidth * 0.05;\n    },\n    endAngle() {\n      return this.tweenedProgress * 2 * Math.PI / 100;\n    },\n    fullArc() {\n      const vm = this;\n      const arc = d3.arc();\n\n      return arc({\n        innerRadius:  vm.innerRadius,\n        outerRadius:  vm.outerRadius,\n        endAngle:     2 * (Math.PI),\n        startAngle:   0\n      });\n    },\n    arc() {\n      // progress / 100 == endAngle/ 2pi\n      const vm = this;\n      const arc = d3.arc();\n\n      return arc({\n        innerRadius: vm.innerRadius,\n        outerRadius: vm.outerRadius,\n        endAngle:    vm.endAngle,\n        startAngle:  0\n      });\n    }\n  },\n  watch: {\n    progress(newProgress, oldProgress) {\n      this.tweenedProgress = newProgress;\n    }\n  }\n\n};\n\n<\/script>\n\n<template>\n  <div>\n    <svg\n      preserveAspectRatio="xMidYMid meet"\n      :viewBox="`0 1 ${graphWidth} ${graphWidth}`"\n    >\n      <g :transform="`translate(${graphWidth/2}, ${graphWidth/2}) rotate(180)`">\n        <path class="background" :d="fullArc"></path>\n        <path :style="{fill: `rgb(${progressColor[0]}, ${progressColor[1]}, ${progressColor[2]})`}" :d="arc"></path>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<style scoped>\n  .background{\n    fill:white;\n    opacity: 0.15;\n  }\n</style>\n']}]),n.exports=e},4341:function(n,e,t){"use strict";var r=t(4157);t.n(r).a},4342:function(n,e,t){(e=t(9)(!0)).push([n.i,'.clearfix[data-v-5f15b29b]:after,.clearfix[data-v-5f15b29b]:before{content:" ";display:table}.clearfix[data-v-5f15b29b]:after{clear:both}.list-unstyled[data-v-5f15b29b]{margin:0;padding:0;list-style-type:none}.no-select[data-v-5f15b29b]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize[data-v-5f15b29b]{resize:none}.hand[data-v-5f15b29b]{cursor:pointer;cursor:hand}.fixed[data-v-5f15b29b]{table-layout:fixed}.clip[data-v-5f15b29b]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-5f15b29b],.force-wrap[data-v-5f15b29b]{word-wrap:break-word}.force-wrap[data-v-5f15b29b]{white-space:normal}.bordered-section[data-v-5f15b29b]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-5f15b29b]{margin-bottom:20px;margin-top:20px}.row[data-v-5f15b29b]{color:hsla(0,0%,100%,.6);display:flex;width:100%;height:100%}.row[data-v-5f15b29b]:first-of-type{background-color:hsla(0,0%,100%,.02);outline:20px solid hsla(0,0%,100%,.02)}.metric[data-v-5f15b29b]{display:flex;flex-direction:column;align-items:center;justify-content:flex-end;margin:5px;flex-grow:1;flex-basis:0%}.metric--value[data-v-5f15b29b]{font-size:3em;font-weight:100}.metric--subtext[data-v-5f15b29b]{text-transform:uppercase}.metric--graph[data-v-5f15b29b]{flex-basis:0%;padding:1% 5% 5%}.metric--title[data-v-5f15b29b]{width:100%;padding:5%}#success .metric--graph[data-v-5f15b29b]{width:60%}#totals>*[data-v-5f15b29b]{width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;flex-grow:1;border-right:1px solid hsla(0,0%,100%,.2);padding:2%}#totals[data-v-5f15b29b]>:first-child{border-bottom:1px solid hsla(0,0%,100%,.2)}#totals span[data-v-5f15b29b]{padding:3%}',"",{version:3,sources:["/home/sangfor/harvester-ui/pages/c/_cluster/rio/dashboard.vue"],names:[],mappings:"AAmLE,mEAEE,WAAY,CACZ,aAAc,CACf,iCAEC,UAAW,CACZ,gCAID,QAAS,CACT,SAAU,CACV,oBAAqB,CA+CsB,4BA3C3C,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBAAiB,CAyCsB,4BArCvC,WAAa,CAsC0B,uBAlCvC,cAAgB,CAChB,WAAa,CAkCqB,wBA9BlC,kBAAoB,CA+Be,uBA3BnC,sBAAwB,CACxB,eAAsB,CACtB,kBAC0B,CAyBQ,oDAzBlC,oBAKmB,CAoBe,6BApBlC,kBAAmB,CAqBqB,mCAjBxC,qCAAsC,CACtC,kBAAmB,CACnB,mBAAoB,CAgB0B,kCAZ9C,kBAAmB,CACnB,eAAgB,CAY6B,sBAiP7C,wBAA6B,CAC7B,YAAa,CACb,UAAW,CACX,WAAY,CAJd,oCAOI,oCAAwC,CACxC,sCAA0C,CAC3C,yBAGD,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,wBAAyB,CACzB,UAAW,CACX,WAAW,CACX,aAAa,CAEb,gCACE,aAAc,CACd,eACF,CAAC,kCAEK,wBAAyB,CAC9B,gCAGC,aAAc,CAEd,gBAAe,CAChB,gCAGC,UAAW,CACX,UAAW,CACZ,yCAID,SAAU,CACX,2BAIG,UAAW,CACX,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CACvB,kBAAmB,CACnB,WAAY,CACZ,yCAA6C,CAC7C,UAAW,CATf,sCAWM,0CAA+C,CAXrD,8BAeI,UAAW",file:"dashboard.vue",sourcesContent:["$max-width: 1440px !default;\n$min-width: 75% !default;\n$input-height: 55px;\n// $input-height-small: 35px;\n\n$column-gutter: 1.75%;\n\n$sideways-tabs-width: 200px;\n\n$z-indexes: (\n  zero: 0,\n  default: 1,\n  overContent: 2,\n  hoverOverContent: 3,\n\n  tableGroup: 10,\n  fixedTableHeader: 11,\n\n  modalOverlay: 20,\n  modalContent: 21,\n\n  tooltip: 30,\n\n  dropdownOverlay: 40,\n  dropdownContent: 41,\n\n  loadingOverlay: 50,\n  loadingContent: 51\n);\n\n// Usage Example:\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\n// }\n$breakpoints: (\n  '--viewport-4':  480px,\n  '--viewport-7':  768px,\n  '--viewport-9':  992px,\n  '--viewport-12': 1281px,\n);\n\n///Computes the \"brightness\" of a color\n@function brightness($color) {\n  @if type-of($color) == color {\n    @return (red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114) / 255 * 100%;\n  }\n  @else {\n    @return unquote(\"brightness(#{$color})\");\n  }\n}\n\n\n///Select the more readable foreground color for a given background color.\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  @if $color == null {\n    @return null;\n  }\n  @else {\n    $color-brightness: brightness($color);\n    $dark-text-brightness: brightness($dark);\n    $light-text-brightness: brightness($light);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function add-z-index($key, $value) {\n  @return map-merge($z-indexes, ($key: $value));\n}\n\n@function z-index($key) {\n  @if map-has-key($z-indexes, $key) {\n    @return map-get($z-indexes, $key);\n  }\n\n  @warn \"Unknown key `#{$key}` in $z-indexes\";\n  @return null;\n}\n\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n      @warn '#{ $number } is not a number.';\n      @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n      @warn '#{ $digits } is not a number.';\n      @return $number;\n  } @else if not unitless($digits) {\n      @warn '#{ $digits } has a unit.';\n      @return $number;\n  }\n  @for $i from 1 through $digits {\n      $n: $n * 10;\n  }\n  @if $mode == round {\n      @return round($number * $n) / $n;\n  } @else if $mode == ceil {\n      @return ceil($number * $n) / $n;\n  } @else if $mode == floor {\n      @return floor($number * $n) / $n;\n  } @else {\n      @warn '#{ $mode } is undefined keyword.';\n      @return $number;\n  }\n}\n\n// Ceil a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A ceiled number\n// @example\n//     decimal-ceil(0.333)    => 1\n//     decimal-ceil(0.333, 1) => 0.4\n//     decimal-ceil(0.333, 2) => 0.34\n//     decimal-ceil(0.666)    => 1\n//     decimal-ceil(0.666, 1) => 0.7\n//     decimal-ceil(0.666, 2) => 0.67\n//\n@function decimal-ceil ($number, $digits: 0) {\n  @return decimal-round($number, $digits, ceil);\n}\n\n// Floor a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A floored number\n// @example\n//     decimal-floor(0.333)    => 0\n//     decimal-floor(0.333, 1) => 0.3\n//     decimal-floor(0.333, 2) => 0.33\n//     decimal-floor(0.666)    => 0\n//     decimal-floor(0.666, 1) => 0.6\n//     decimal-floor(0.666, 2) => 0.66\n//\n@function decimal-floor ($number, $digits: 0) {\n  @return decimal-round($number, $digits, floor);\n}\n\n@function sizzle-gradient($color) {\n  $angle: 135deg;\n  $startPos: 0%;\n  $start: 0.3;\n  $middlePos: 110px;\n  $middle: 0.1;\n  $endPos: 100%;\n  $end: 0;\n\n  @return transparent linear-gradient(#{$angle},\n      #{rgba($color, $start)} #{$startPos},\n      #{rgba($color, $middle)} #{$middlePos},\n      #{rgba($color, $end)} #{$endPos}\n  ) 0% 0% no-repeat padding-box;\n}\n\n// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/// Clear inner floats\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \" \"; // 1\n    display: table; // 2\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n@mixin list-unstyled {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n@mixin no-select {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin no-resize {\n  resize : none;\n}\n\n@mixin hand {\n  cursor : pointer;\n  cursor : hand;\n}\n\n@mixin fixed {\n  table-layout : fixed;\n}\n\n@mixin clip {\n  text-overflow : ellipsis;\n  overflow      : hidden;\n  white-space   : nowrap;\n  word-wrap     : break-word;\n}\n\n@mixin force-wrap {\n  word-wrap : break-word;\n  white-space: normal;\n}\n\n@mixin bordered-section {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n@mixin section-divider {\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.clearfix         { @include clearfix; }\n.list-unstyled    { @include list-unstyled }\n.no-select        { @include no-select }\n.no-resize        { @include no-resize }\n.hand             { @include hand }\n.fixed            { @include fixed }\n.clip             { @include clip }\n.force-wrap       { @include force-wrap }\n.bordered-section { @include bordered-section }\n.section-divider  { @include section-divider }\n\n/// Sets the specified background color and calculates a dark or light contrasted text color.\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  color: contrast-color($background-color, $dark, $light);\n\n  &:hover {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n/// Sets base color and darkens bg on hover\n@mixin bg-lighten($bg) {\n  background: $bg;\n  * {\n    background:lighten($bg,20%);\n  }\n}\n\n@mixin link-color($color, $hover) {\n  @if not($hover) {\n    $hover: $color;\n  }\n\n  color: $color;\n\n  &:hover\n   {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n@mixin icon-rotate($degrees, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: rotate($degrees);\n      -ms-transform: rotate($degrees);\n          transform: rotate($degrees);\n}\n\n@mixin icon-flip($horiz, $vert, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: scale($horiz, $vert);\n      -ms-transform: scale($horiz, $vert);\n          transform: scale($horiz, $vert);\n}\n\n@mixin input-status-color {\n  &:not(.focused) {\n    &.success {\n      border: solid 1px var(--success);\n      input, .selected {\n        color: var(--success);\n      }\n\n      .vs__actions:after {\n        color: var(--success);\n      }\n    }\n\n    &.warning {\n      border: solid 1px var(--warning);\n      input, .selected {\n        color: var(--warning);\n      }\n\n      .vs__actions:after {\n        color: var(--warning);\n      }\n    }\n\n    &.error {\n      border: solid 1px var(--error);\n      input, .selected {\n        color: var(--error);\n      }\n\n      .vs__actions:after {\n        color: var(--error);\n      }\n    }\n  }\n}\n\n@mixin form-focus {\n  // Focus for form like elements (not to be confused with basic :focus style)\n  outline: none;\n  box-shadow: 0 0 0 var(--outline-width) var(--outline);\n  background: var(--input-focus-bg)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.row {\n  color: rgba(255,255,255, 0.6);\n  display: flex;\n  width: 100%;\n  height: 100%;\n\n  &:nth-of-type(1){\n    background-color: rgba(255,255,255,0.02);\n    outline: 20px solid rgba(255,255,255,0.02)\n  }\n}\n.metric{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-end;\n  margin: 5px;\n  flex-grow:1;\n  flex-basis:0%;\n\n  &--value{\n    font-size: 3em;\n    font-weight: 100\n  }\n  &--subtext {\n        text-transform: uppercase;\n  }\n\n  &--graph{\n    flex-basis: 0%;\n    padding: 5%;\n    padding-top: 1%;\n  }\n\n  &--title{\n    width: 100%;\n    padding: 5%;\n  }\n}\n\n#success .metric--graph{\n  width: 60%;\n}\n\n#totals {\n  & > * {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    border-right: 1px solid rgba(255,255,255,0.2);\n    padding: 2%;\n    &:nth-child(1){\n      border-bottom:  1px solid rgba(255,255,255,0.2);\n    }\n  }\n  & span{\n    padding: 3%;\n  }\n}\n"]}]),n.exports=e},4474:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return o}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{style:{padding:"1px"}},[t("div",{staticClass:"row"},[n._m(0),n._v(" "),t("div",{staticClass:"metric",attrs:{id:"success"}},[t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[4,4]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("ProgressArc",{attrs:{"graph-width":e.graphWidth,progress:n.set2.points[3],tween:!0}})]}}])}),n._v(" "),t("span",{staticClass:"metric--value"},[n._v(n._s(n.set2.points[3].toFixed(0))+"%")]),n._v(" "),t("span",{staticClass:"metric--subtext"},[n._v("Global Success Rate")])],1),n._v(" "),t("div",{staticClass:"metric",attrs:{id:"rps"}},[t("AspectPreserver",{staticClass:"metric--graph",attrs:{id:"req-volume","aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.set1]}})]}}])}),n._v(" "),t("span",{staticClass:"metric--value"},[n._v("\n        "+n._s((n.set1.points[0]/1e3).toFixed(2))+"K rps\n      ")]),n._v(" "),t("span",{staticClass:"metric--subtext"},[n._v("Global Request Rate")])],1),n._v(" "),t("div",{staticClass:"metric",attrs:{id:"errors--4"}},[t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.mostlyZeroes]}})]}}])}),n._v(" "),t("span",{staticClass:"metric--value"},[n._v("\n        "+n._s(0)+"K rps\n      ")]),n._v(" "),t("span",{staticClass:"metric--subtext"},[n._v("4xx errors")])],1),n._v(" "),t("div",{staticClass:"metric",attrs:{id:"errors--5"}},[t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.mostlyZeroes]}})]}}])}),n._v(" "),t("span",{staticClass:"metric--value"},[n._v("\n        "+n._s(0)+"K rps\n      ")]),n._v(" "),t("span",{staticClass:"metric--subtext"},[n._v("5xx errors")])],1)]),n._v(" "),t("div",{staticClass:"row"},[t("div",{staticClass:"metric"},[t("span",{staticClass:"metric--title"},[n._v("Success Rates")]),n._v(" "),t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.set1,n.set2,n.set3]}})]}}])})],1),n._v(" "),t("div",{staticClass:"metric"},[t("span",{staticClass:"metric--title"},[n._v("Request Volumes")]),n._v(" "),t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.set1,n.set2]}})]}}])})],1),n._v(" "),t("div",{staticClass:"metric"},[t("span",{staticClass:"metric--title"},[n._v("Latency")]),n._v(" "),t("AspectPreserver",{staticClass:"metric--graph",attrs:{"aspect-ratio":[16,9]},scopedSlots:n._u([{key:"default",fn:function(e){return[t("LinePlot",{attrs:{"graph-width":e.graphWidth,"graph-height":e.graphHeight,"data-sets":[n.set1,n.set2]}})]}}])})],1)])])},o=[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"metric",attrs:{id:"totals"}},[e("div",[e("span",{staticClass:"metric--value"},[this._v(" 3")]),this._v(" "),e("span",{staticClass:"metric--subtext"},[this._v("services monitored")])]),this._v(" "),e("div",[e("span",{staticClass:"metric--value"},[this._v("5")]),this._v(" "),e("span",{staticClass:"metric--subtext"},[this._v("instances")])])])}]},4491:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return o}));var r=function(){var n=this.$createElement,e=this._self._c||n;return e("div",{ref:"outer",staticClass:"aspect--outer"},[e("div",{ref:"inner",staticClass:"aspect--inner",style:{paddingBottom:100*this.aspectRatio[1]/this.aspectRatio[0]+"%"}},[this._t("default",null,{graphWidth:this.graphWidth,graphHeight:this.graphHeight})],2)])},o=[]},4492:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return o}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("svg",{ref:"svg",staticClass:"lineplot",attrs:{preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 "+(n.graphWidth+2)+" "+(n.graphHeight+2)}},[n._l(n.dataSets,(function(e,i){return t("g",{key:i,class:"lines--"+i},[t("path",{key:i,staticClass:"line",attrs:{d:n.lines[i]}}),n._v(" "),n._l(e.points,(function(r,o){return t("circle",{key:o+"--circle",staticClass:"data-circle",attrs:{r:"4",cx:n.scaleX([0,10],o),cy:n.scaleY(e.domain,r)}})}))],2)})),n._v(" "),t("g",{staticClass:"grid"})],2)},o=[]},4493:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return o}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[t("svg",{attrs:{preserveAspectRatio:"xMidYMid meet",viewBox:"0 1 "+n.graphWidth+" "+n.graphWidth}},[t("g",{attrs:{transform:"translate("+n.graphWidth/2+", "+n.graphWidth/2+") rotate(180)"}},[t("path",{staticClass:"background",attrs:{d:n.fullArc}}),n._v(" "),t("path",{style:{fill:"rgb("+n.progressColor[0]+", "+n.progressColor[1]+", "+n.progressColor[2]+")"},attrs:{d:n.arc}})])])])},o=[]}}]);
//# sourceMappingURL=dashboard.b79b37af288c3a7d1412.js.map