{"version":3,"sources":["webpack:///./pages/rio/mesh.vue","webpack:///./pages/rio/mesh.vue?fbfa","webpack:///pages/rio/mesh.vue","webpack:///./pages/rio/mesh.vue?78fb","webpack:///./pages/rio/mesh.vue?b4be","webpack:///./pages/rio/mesh.vue?c22c","webpack:///./pages/rio/mesh.vue?4ddd"],"names":["component","nodeIdFor","obj","fromId","toId","round3Digits","num","Math","round","computed","namespaces","this","$store","getters","displayNodes","console","log","x","namespace","displayEdges","ns1","ns2","watch","nodes","updateGraph","renderGraph","edges","beforeDestroy","clearInterval","timer","methods","ensureNamespace","name","seenNamespaces","g","setNode","id","label","clusterLabelPos","rx","ry","svg","call","zoom","transform","d3","zoomIdentity","translate","scale","render","group","lastZoom","y","k","dX","dY","loading","clicked","path","content","module","i","locals","exports","add","default","___CSS_LOADER_API_IMPORT___","push","_h","$createElement","_c","_self","staticClass","_m","_v","ref","attrs","on","staticRenderFns"],"mappings":"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","file":"pages/rio/mesh.579426cb6f92298b392b.js","sourcesContent":["import { render, staticRenderFns } from \"./mesh.vue?vue&type=template&id=15f2ed44&\"\nimport script from \"./mesh.vue?vue&type=script&lang=js&\"\nexport * from \"./mesh.vue?vue&type=script&lang=js&\"\nimport style0 from \"./mesh.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--5-0!../../node_modules/thread-loader/dist/cjs.js??ref--5-1!../../node_modules/babel-loader/lib/index.js??ref--5-2!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--5-0!../../node_modules/thread-loader/dist/cjs.js??ref--5-1!../../node_modules/babel-loader/lib/index.js??ref--5-2!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=script&lang=js&\"","<script>\nimport $ from 'jquery';\nimport { escapeHtml } from '@/utils/string';\n\nconst RADIUS = 5;\n\nconst INTERVAL = 10000;\n\n/*\nfunction randomStats() {\n  return {\n    'p50ms':       Math.random(),\n    'p90ms':       Math.random() * 2,\n    'p99ms':       Math.random() * 5,\n    'rps':         Math.random() * 100,\n    'successRate': Math.random(),\n  };\n}\n\nfunction randomItem(ary) {\n  const idx = Math.floor(Math.random() * ary.length);\n\n  return ary[idx];\n}\n\nfunction randomData() {\n  const nodes = [];\n  const edges = [];\n\n  ['foo', 'bar', 'baz', 'bat', 'qux'].forEach((name) => {\n    nodes.push({\n      'namespace': 'default',\n      'app':       name,\n      'version':   'v1',\n      'stats':     randomStats(),\n    });\n  });\n\n  ['a', 'b', 'c', 'd', 'e'].forEach((name) => {\n    nodes.push({\n      'namespace': 'another',\n      'app':       name,\n      'version':   'v1',\n      'stats':     randomStats(),\n    });\n  });\n\n  for ( let i = 0 ; i < 10 ; i++ ) {\n    const from = randomItem(nodes);\n    const crossNs = Math.random() < 0.2;\n    const toChoices = nodes.filter((x) => {\n      if ( x === from ) {\n        return false;\n      }\n\n      if ( crossNs ) {\n        return x.namespace !== from.namespace;\n      } else {\n        return x.namespace === from.namespace;\n      }\n    });\n    const to = randomItem(toChoices);\n\n    edges.push({\n      fromNamespace: from.namespace,\n      fromApp:       from.app,\n      fromVersion:   from.version,\n      toNamespace:   to.namespace,\n      toApp:         to.app,\n      toVersion:     to.version,\n      stats:         randomStats(),\n    });\n  }\n\n  return {\n    nodes,\n    edges\n  };\n}\n*/\n\nfunction nodeIdFor(obj) {\n  return `${ obj.namespace }:${ obj.app }@${ obj.version }`;\n}\n\nfunction fromId(obj) {\n  return `${ obj.fromNamespace }:${ obj.fromApp }@${ obj.fromVersion }`;\n}\n\nfunction toId(obj) {\n  return `${ obj.toNamespace }:${ obj.toApp }@${ obj.toVersion }`;\n}\n\nasync function loadData(store) {\n  const data = await store.dispatch('rancher/request', { url: '/v1-metrics/meshsummary' });\n\n  const known = {};\n\n  data.nodes = data.nodes.filter(x => !!x.app && !!x.namespace);\n  data.nodes.forEach((x) => {\n    x.id = nodeIdFor(x);\n    known[x.id] = true;\n  });\n\n  data.edges = data.edges.filter(x => known[fromId(x)] && known[toId(x)]);\n\n  return data;\n}\n\nfunction round3Digits(num) {\n  if ( !num ) {\n    return 0;\n  }\n\n  if ( num > 100 ) {\n    return Math.round(num);\n  } else if ( num > 10 ) {\n    return Math.round(num * 10) / 10;\n  } else {\n    return Math.round(num * 100) / 100;\n  }\n}\n\nexport default {\n\n  /* (\n  data() {\n    return {\n      loading: true,\n      ...randomData(),\n    };\n  },\n  */\n\n  async asyncData({ store }) {\n    const data = await loadData(store);\n\n    return data;\n  },\n  computed: {\n    namespaces() {\n      return this.$store.getters['namespaces']();\n    },\n\n    displayNodes() {\n      console.log('get displayNodes'); // eslint-disable-line no-console\n      const namespaces = this.namespaces;\n\n      const out = this.nodes.filter((x) => {\n        return namespaces[x.namespace];\n      });\n\n      return out;\n    },\n\n    displayEdges() {\n      console.log('get displayEdges'); // eslint-disable-line no-console\n      const namespaces = this.namespaces;\n\n      const out = this.edges.filter((x) => {\n        const ns1 = x.fromNamespace;\n        const ns2 = x.toNamespace;\n\n        return namespaces[ns1] && namespaces[ns2];\n      });\n\n      return out;\n    },\n  },\n\n  watch: {\n    // Nodes isn't watched, but gets updated at the same time...\n    nodes() {\n      console.log('nodes updated'); // eslint-disable-line no-console\n      this.updateGraph();\n      this.renderGraph();\n    },\n\n    namespaces() {\n      console.log('namespaces updated'); // eslint-disable-line no-console\n      this.updateGraph();\n      this.renderGraph();\n    },\n\n    edges() {\n      console.log('edges updated'); // eslint-disable-line no-console\n      this.updateGraph();\n      this.renderGraph();\n    },\n  },\n\n  async mounted() {\n    console.log('Mounted'); // eslint-disable-line no-console\n    this.timer = setInterval(() => {\n      console.log('Timer'); // eslint-disable-line no-console\n      this.refreshData();\n    }, INTERVAL);\n\n    await this.initGraph();\n    this.updateGraph();\n    this.renderGraph();\n\n    window.m = this;\n  },\n\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n\n  methods: {\n    async refreshData() {\n      console.log('Refreshing...'); // eslint-disable-line no-console\n      const neu = await loadData(this.$store);\n\n      this.nodes = neu.nodes;\n      this.edges = neu.edges;\n      console.log('Refreshed'); // eslint-disable-line no-console\n    },\n\n    async initGraph() {\n      const d3 = await import('d3');\n      const dagreD3 = await import('dagre-d3');\n\n      const g = new dagreD3.graphlib.Graph({ compound: true });\n\n      g.setGraph({\n        marginx: 0,\n        marginy: 0,\n        rankdir: 'LR',\n        align:   'UL',\n        ranker:  'longest-path', // 'tight-tree',\n      });\n\n      g.setDefaultEdgeLabel(() => {\n        return {};\n      });\n\n      // Create the renderer\n      const render = new dagreD3.render();\n\n      // Add our custom arrow\n      render.arrows().smaller = function normal(parent, id, edge, type) {\n        const marker = parent.append('marker')\n          .attr('id', id)\n          .attr('viewBox', '0 0 12 12')\n          .attr('refX', 6)\n          .attr('refY', 6)\n          .attr('markerUnits', 'userSpaceOnUse')\n          .attr('markerWidth', 12)\n          .attr('markerHeight', 12)\n          .attr('orient', 'auto');\n        const path = marker.append('path')\n          .attr('class', 'arrowhead')\n          .attr('d', 'M 6 0 L 0 6 L 6 12 L 12 6 z')\n          .style('stroke-width', 1)\n          .style('stroke-dasharray', '1,0');\n\n        dagreD3.util.applyStyle(path, edge[`${ type }Style`]);\n      };\n\n      // Set up an SVG group so that we can translate the final graph.\n      const svg = d3.select(this.$refs.mesh);\n      const group = svg.append('g');\n\n      const zoom = d3.zoom().on('zoom', () => {\n        if ( d3.event.sourceEvent ) {\n          this.lastZoom = d3.event.transform;\n        }\n        group.attr('transform', d3.event.transform);\n      });\n\n      svg.call(zoom);\n\n      this.d3 = d3;\n      this.dagreD3 = dagreD3;\n      this.graph = g;\n      this.render = render;\n      this.group = group;\n      this.zoom = zoom;\n    },\n\n    updateGraph() {\n      // @TODO diff nodes/edges, remove unexpected and add missing ones\n      console.log('Updating...'); // eslint-disable-line no-console\n\n      const e = escapeHtml;\n      const g = this.graph;\n\n      const seenNamespaces = {};\n\n      for ( const node of this.displayNodes ) {\n        const nsId = ensureNamespace(node.namespace);\n        const id = nodeIdFor(node);\n\n        node.label = `${ node.app }@${ node.version }`;\n\n        let p99 = node.stats.p99ms;\n        let unit = 'ms';\n\n        if ( p99 > 1000 ) {\n          p99 /= 1000;\n          unit = 's';\n        }\n\n        const html = `\n          <div class=\"version\">\n            <h4>${ e(node.app) }@${ e(node.version) }</h4>\n            <div class=\"row\">\n              <div class=\"col span-4 sr\">\n                <span>${ round3Digits(node.stats.successRate * 100) }</span><span class=\"unit\">%</span>\n              </div>\n              <div class=\"col span-4 rps\">\n                <span>${ round3Digits(node.stats.rps) }</span>\n              </div>\n              <div class=\"col span-4 p99\">\n                <span>${ round3Digits(p99) }</span><span class=\"unit\">${ unit }</span>\n              </div>\n            </div>\n          </div>\n        `;\n\n        g.setNode(id, {\n          labelType: 'html',\n          label:     html,\n          width:     158,\n          height:    80,\n          rx:        RADIUS,\n          ry:        RADIUS,\n        });\n        g.setParent(id, nsId);\n      }\n\n      const rpses = this.displayEdges.map(x => x.stats.rps);\n      const min = Math.min(...rpses);\n      const max = Math.max(...rpses);\n\n      for ( const edge of this.displayEdges ) {\n        ensureNamespace(edge.fromNamespace);\n        ensureNamespace(edge.toNamespace);\n        const weight = Math.floor(4 * (edge.stats.rps - min) / (max - min)) + 1;\n\n        g.setEdge(fromId(edge), toId(edge), {\n          arrowhead:       'smaller',\n          arrowheadClass:  'arrowhead',\n          class:           `weight${ weight }`,\n          curve:           this.d3.curveBasis,\n          weight,\n        });\n      }\n\n      function ensureNamespace(name) {\n        const id = `ns:${ name }`;\n\n        if ( !seenNamespaces[name] ) {\n          seenNamespaces[name] = true;\n          g.setNode(id, {\n            label:           `Namespace: ${ name }`,\n            clusterLabelPos: 'top',\n            rx:              RADIUS,\n            ry:              RADIUS\n          });\n        }\n\n        return id;\n      }\n    },\n\n    renderGraph() {\n      console.log('Rendering...'); // eslint-disable-line no-console\n\n      const d3 = this.d3;\n      const svg = this.d3.select(this.$refs.mesh);\n      const group = this.group;\n      const g = this.graph;\n      const render = this.render;\n      const zoom = this.zoom;\n\n      svg.call(zoom.transform, d3.zoomIdentity.translate(0, 0).scale(1));\n\n      // Run the renderer. This is what draws the final graph.\n      render(group, g);\n\n      const graphWidth = g.graph().width;\n      const graphHeight = g.graph().height;\n      const width = parseInt(svg.style('width').replace(/px/, ''));\n      const height = parseInt(svg.style('height').replace(/px/, ''));\n      const scale = Math.min(width / graphWidth, height / graphHeight);\n      const dX = (width / 2) - ((graphWidth * scale) / 2);\n      const dY = (height / 2) - ((graphHeight * scale) / 2);\n\n      console.log('render'); // eslint-disable-line no-console\n      if ( this.lastZoom ) {\n        svg.call(zoom.transform, d3.zoomIdentity.translate(this.lastZoom.x, this.lastZoom.y).scale(this.lastZoom.k));\n      } else {\n        svg.call(zoom.transform, d3.zoomIdentity.translate(dX, dY).scale(scale));\n      }\n\n      this.loading = false;\n    },\n\n    clicked(event) {\n      const path = $(event.target).closest('.edgePath');\n\n      console.log(path); // eslint-disable-line no-console\n    }\n  },\n};\n</script>\n<template>\n  <div class=\"mesh\">\n    <header>\n      <h1>App Mesh</h1>\n    </header>\n\n    <svg id=\"mesh\" ref=\"mesh\" @click=\"clicked\" />\n  </div>\n</template>\n\n<style lang=\"scss\">\n  #mesh {\n    width: 100%;\n    height: calc(100vh - 165px);\n\n    .version {\n      width: 158px;\n      height: 80px;\n      color: #b6b6c2;\n      text-align: center;\n\n      .row {\n        margin: 0;\n      }\n\n      H4 {\n        color: #b6b6c2;\n        display: block;\n        border-bottom: 1px solid #555;\n        text-align: left;\n        padding-bottom: 5px;\n        margin-bottom: 5px;\n      }\n\n      .sr, .rps, .p99 {\n        font-size: 20px;\n\n        .unit {\n          font-size: 12px;\n        }\n      }\n\n      .sr:before, .rps:before, .p99:before {\n        color: white;\n        font-weight: bold;\n        font-size: 15px;\n        display: block;\n      }\n\n      .sr:before {\n        content: 'SR';\n      }\n\n      .rps:before {\n        content: 'RPS';\n      }\n\n      .p99:before {\n        content: '99%';\n      }\n\n    }\n\n    .clusters .label text {\n      fill: #b6b6c2;\n      font-weight: bold;\n    }\n\n    .clusters RECT {\n      fill: #222;\n      stroke: #555;\n    }\n\n    .arrowhead {\n      fill: #6c6c76;\n    }\n\n    .node RECT {\n      fill: #111;\n      stroke: #555;\n    }\n\n    PATH {\n      stroke: #6c6c76;\n    }\n\n    .edgePath {\n      cursor: pointer;\n    }\n\n    .weight1 { stroke-width: 2px; }\n    .weight2 { stroke-width: 3px; }\n    .weight3 { stroke-width: 4px; }\n    .weight4 { stroke-width: 5px; }\n    .weight5 { stroke-width: 6px; }\n  }\n</style>\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-4!../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-5!../../node_modules/sass-resources-loader/lib/loader.js??ref--10-oneOf-1-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=style&index=0&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1ab3f068\", content, true, {\"sourceMap\":true});","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--10-oneOf-1-0!../../node_modules/thread-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-2!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-4!../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-5!../../node_modules/sass-resources-loader/lib/loader.js??ref--10-oneOf-1-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--10-oneOf-1-0!../../node_modules/thread-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-2!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-4!../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-5!../../node_modules/sass-resources-loader/lib/loader.js??ref--10-oneOf-1-6!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=style&index=0&lang=scss&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".clearfix:after,.clearfix:before{content:\\\" \\\";display:table}.clearfix:after{clear:both}.list-unstyled{margin:0;padding:0;list-style-type:none}.no-select{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize{resize:none}.hand{cursor:pointer;cursor:hand}.fixed{table-layout:fixed}.clip{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip,.force-wrap{word-wrap:break-word}.force-wrap{white-space:normal}.bordered-section{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider{margin-bottom:20px;margin-top:20px}#mesh{width:100%;height:calc(100vh - 165px)}#mesh .version{width:158px;height:80px;color:#b6b6c2;text-align:center}#mesh .version .row{margin:0}#mesh .version H4{color:#b6b6c2;display:block;border-bottom:1px solid #555;text-align:left;padding-bottom:5px;margin-bottom:5px}#mesh .version .p99,#mesh .version .rps,#mesh .version .sr{font-size:20px}#mesh .version .p99 .unit,#mesh .version .rps .unit,#mesh .version .sr .unit{font-size:12px}#mesh .version .p99:before,#mesh .version .rps:before,#mesh .version .sr:before{color:#fff;font-weight:700;font-size:15px;display:block}#mesh .version .sr:before{content:\\\"SR\\\"}#mesh .version .rps:before{content:\\\"RPS\\\"}#mesh .version .p99:before{content:\\\"99%\\\"}#mesh .clusters .label text{fill:#b6b6c2;font-weight:700}#mesh .clusters RECT{fill:#222;stroke:#555}#mesh .arrowhead{fill:#6c6c76}#mesh .node RECT{fill:#111;stroke:#555}#mesh PATH{stroke:#6c6c76}#mesh .edgePath{cursor:pointer}#mesh .weight1{stroke-width:2px}#mesh .weight2{stroke-width:3px}#mesh .weight3{stroke-width:4px}#mesh .weight4{stroke-width:5px}#mesh .weight5{stroke-width:6px}\", \"\",{\"version\":3,\"sources\":[\"/home/sangfor/harvester-ui/pages/rio/mesh.vue\"],\"names\":[],\"mappings\":\"AAmLE,iCAEE,WAAY,CACZ,aAAc,CACf,gBAEC,UAAW,CACZ,eAID,QAAS,CACT,SAAU,CACV,oBAAqB,CA+CsB,WA3C3C,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBAAiB,CAyCsB,WArCvC,WAAa,CAsC0B,MAlCvC,cAAgB,CAChB,WAAa,CAkCqB,OA9BlC,kBAAoB,CA+Be,MA3BnC,sBAAwB,CACxB,eAAsB,CACtB,kBAC0B,CAyBQ,kBAzBlC,oBAKmB,CAoBe,YApBlC,kBAAmB,CAqBqB,kBAjBxC,qCAAsC,CACtC,kBAAmB,CACnB,mBAAoB,CAgB0B,iBAZ9C,kBAAmB,CACnB,eAAgB,CAY6B,MA+f7C,UAAW,CACX,0BAA2B,CAF7B,eAKI,WAAY,CACZ,WAAY,CACZ,aAAc,CACd,iBAAkB,CARtB,oBAWM,QAAS,CAXf,kBAeM,aAAc,CACd,aAAc,CACd,4BAA6B,CAC7B,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CApBxB,2DAwBM,cAAe,CAxBrB,6EA2BQ,cAAe,CA3BvB,gFAgCM,UAAY,CACZ,eAAiB,CACjB,cAAe,CACf,aAAc,CAnCpB,0BAuCM,YAAa,CAvCnB,2BA2CM,aAAc,CA3CpB,2BA+CM,aAAc,CA/CpB,4BAqDI,YAAa,CACb,eAAiB,CAtDrB,qBA0DI,SAAU,CACV,WAAY,CA3DhB,iBA+DI,YAAa,CA/DjB,iBAmEI,SAAU,CACV,WAAY,CApEhB,WAwEI,cAAe,CAxEnB,gBA4EI,cAAe,CA5EnB,eA+Ea,gBAAiB,CA/E9B,eAgFa,gBAAiB,CAhF9B,eAiFa,gBAAiB,CAjF9B,eAkFa,gBAAiB,CAlF9B,eAmFa,gBAAiB\",\"file\":\"mesh.vue\",\"sourcesContent\":[\"$max-width: 1440px !default;\\n$min-width: 75% !default;\\n$input-height: 55px;\\n// $input-height-small: 35px;\\n\\n$column-gutter: 1.75%;\\n\\n$sideways-tabs-width: 200px;\\n\\n$z-indexes: (\\n  zero: 0,\\n  default: 1,\\n  overContent: 2,\\n  hoverOverContent: 3,\\n\\n  tableGroup: 10,\\n  fixedTableHeader: 11,\\n\\n  modalOverlay: 20,\\n  modalContent: 21,\\n\\n  tooltip: 30,\\n\\n  dropdownOverlay: 40,\\n  dropdownContent: 41,\\n\\n  loadingOverlay: 50,\\n  loadingContent: 51\\n);\\n\\n// Usage Example:\\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\\n// }\\n$breakpoints: (\\n  '--viewport-4':  480px,\\n  '--viewport-7':  768px,\\n  '--viewport-9':  992px,\\n  '--viewport-12': 1281px,\\n);\\n\\n///Computes the \\\"brightness\\\" of a color\\n@function brightness($color) {\\n  @if type-of($color) == color {\\n    @return (red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114) / 255 * 100%;\\n  }\\n  @else {\\n    @return unquote(\\\"brightness(#{$color})\\\");\\n  }\\n}\\n\\n\\n///Select the more readable foreground color for a given background color.\\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\\n  @if $color == null {\\n    @return null;\\n  }\\n  @else {\\n    $color-brightness: brightness($color);\\n    $dark-text-brightness: brightness($dark);\\n    $light-text-brightness: brightness($light);\\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\\n  }\\n}\\n\\n@function add-z-index($key, $value) {\\n  @return map-merge($z-indexes, ($key: $value));\\n}\\n\\n@function z-index($key) {\\n  @if map-has-key($z-indexes, $key) {\\n    @return map-get($z-indexes, $key);\\n  }\\n\\n  @warn \\\"Unknown key `#{$key}` in $z-indexes\\\";\\n  @return null;\\n}\\n\\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\\n\\n// Round a number to specified digits.\\n//\\n// @param  {Number} $number A number to round\\n// @param  {Number} [$digits:0] Digits to output\\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\\n// @return {Number} A rounded number\\n// @example\\n//     decimal-round(0.333)    => 0\\n//     decimal-round(0.333, 1) => 0.3\\n//     decimal-round(0.333, 2) => 0.33\\n//     decimal-round(0.666)    => 1\\n//     decimal-round(0.666, 1) => 0.7\\n//     decimal-round(0.666, 2) => 0.67\\n//\\n@function decimal-round ($number, $digits: 0, $mode: round) {\\n  $n: 1;\\n  // $number must be a number\\n  @if type-of($number) != number {\\n      @warn '#{ $number } is not a number.';\\n      @return $number;\\n  }\\n  // $digits must be a unitless number\\n  @if type-of($digits) != number {\\n      @warn '#{ $digits } is not a number.';\\n      @return $number;\\n  } @else if not unitless($digits) {\\n      @warn '#{ $digits } has a unit.';\\n      @return $number;\\n  }\\n  @for $i from 1 through $digits {\\n      $n: $n * 10;\\n  }\\n  @if $mode == round {\\n      @return round($number * $n) / $n;\\n  } @else if $mode == ceil {\\n      @return ceil($number * $n) / $n;\\n  } @else if $mode == floor {\\n      @return floor($number * $n) / $n;\\n  } @else {\\n      @warn '#{ $mode } is undefined keyword.';\\n      @return $number;\\n  }\\n}\\n\\n// Ceil a number to specified digits.\\n//\\n// @param  {Number} $number A number to round\\n// @param  {Number} [$digits:0] Digits to output\\n// @return {Number} A ceiled number\\n// @example\\n//     decimal-ceil(0.333)    => 1\\n//     decimal-ceil(0.333, 1) => 0.4\\n//     decimal-ceil(0.333, 2) => 0.34\\n//     decimal-ceil(0.666)    => 1\\n//     decimal-ceil(0.666, 1) => 0.7\\n//     decimal-ceil(0.666, 2) => 0.67\\n//\\n@function decimal-ceil ($number, $digits: 0) {\\n  @return decimal-round($number, $digits, ceil);\\n}\\n\\n// Floor a number to specified digits.\\n//\\n// @param  {Number} $number A number to round\\n// @param  {Number} [$digits:0] Digits to output\\n// @return {Number} A floored number\\n// @example\\n//     decimal-floor(0.333)    => 0\\n//     decimal-floor(0.333, 1) => 0.3\\n//     decimal-floor(0.333, 2) => 0.33\\n//     decimal-floor(0.666)    => 0\\n//     decimal-floor(0.666, 1) => 0.6\\n//     decimal-floor(0.666, 2) => 0.66\\n//\\n@function decimal-floor ($number, $digits: 0) {\\n  @return decimal-round($number, $digits, floor);\\n}\\n\\n@function sizzle-gradient($color) {\\n  $angle: 135deg;\\n  $startPos: 0%;\\n  $start: 0.3;\\n  $middlePos: 110px;\\n  $middle: 0.1;\\n  $endPos: 100%;\\n  $end: 0;\\n\\n  @return transparent linear-gradient(#{$angle},\\n      #{rgba($color, $start)} #{$startPos},\\n      #{rgba($color, $middle)} #{$middlePos},\\n      #{rgba($color, $end)} #{$endPos}\\n  ) 0% 0% no-repeat padding-box;\\n}\\n\\n// -----------------------------------------------------------------------------\\n// This file contains all application-wide Sass mixins.\\n// -----------------------------------------------------------------------------\\n\\n/// Clear inner floats\\n@mixin clearfix() {\\n  &:before,\\n  &:after {\\n    content: \\\" \\\"; // 1\\n    display: table; // 2\\n  }\\n  &:after {\\n    clear: both;\\n  }\\n}\\n\\n@mixin list-unstyled {\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none;\\n}\\n\\n@mixin no-select {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n@mixin no-resize {\\n  resize : none;\\n}\\n\\n@mixin hand {\\n  cursor : pointer;\\n  cursor : hand;\\n}\\n\\n@mixin fixed {\\n  table-layout : fixed;\\n}\\n\\n@mixin clip {\\n  text-overflow : ellipsis;\\n  overflow      : hidden;\\n  white-space   : nowrap;\\n  word-wrap     : break-word;\\n}\\n\\n@mixin force-wrap {\\n  word-wrap : break-word;\\n  white-space: normal;\\n}\\n\\n@mixin bordered-section {\\n  border-bottom: 1px solid var(--border);\\n  margin-bottom: 20px;\\n  padding-bottom: 20px;\\n}\\n\\n@mixin section-divider {\\n  margin-bottom: 20px;\\n  margin-top: 20px;\\n}\\n\\n.clearfix         { @include clearfix; }\\n.list-unstyled    { @include list-unstyled }\\n.no-select        { @include no-select }\\n.no-resize        { @include no-resize }\\n.hand             { @include hand }\\n.fixed            { @include fixed }\\n.clip             { @include clip }\\n.force-wrap       { @include force-wrap }\\n.bordered-section { @include bordered-section }\\n.section-divider  { @include section-divider }\\n\\n/// Sets the specified background color and calculates a dark or light contrasted text color.\\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\\n  color: contrast-color($background-color, $dark, $light);\\n\\n  &:hover {\\n    text-decoration: underline;\\n    color: var(--body-text);\\n  }\\n}\\n\\n/// Sets base color and darkens bg on hover\\n@mixin bg-lighten($bg) {\\n  background: $bg;\\n  * {\\n    background:lighten($bg,20%);\\n  }\\n}\\n\\n@mixin link-color($color, $hover) {\\n  @if not($hover) {\\n    $hover: $color;\\n  }\\n\\n  color: $color;\\n\\n  &:hover\\n   {\\n    text-decoration: underline;\\n    color: var(--body-text);\\n  }\\n}\\n\\n@mixin icon-rotate($degrees, $rotation) {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\\n  -webkit-transform: rotate($degrees);\\n      -ms-transform: rotate($degrees);\\n          transform: rotate($degrees);\\n}\\n\\n@mixin icon-flip($horiz, $vert, $rotation) {\\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\\n  -webkit-transform: scale($horiz, $vert);\\n      -ms-transform: scale($horiz, $vert);\\n          transform: scale($horiz, $vert);\\n}\\n\\n@mixin input-status-color {\\n  &:not(.focused) {\\n    &.success {\\n      border: solid 1px var(--success);\\n      input, .selected {\\n        color: var(--success);\\n      }\\n\\n      .vs__actions:after {\\n        color: var(--success);\\n      }\\n    }\\n\\n    &.warning {\\n      border: solid 1px var(--warning);\\n      input, .selected {\\n        color: var(--warning);\\n      }\\n\\n      .vs__actions:after {\\n        color: var(--warning);\\n      }\\n    }\\n\\n    &.error {\\n      border: solid 1px var(--error);\\n      input, .selected {\\n        color: var(--error);\\n      }\\n\\n      .vs__actions:after {\\n        color: var(--error);\\n      }\\n    }\\n  }\\n}\\n\\n@mixin form-focus {\\n  // Focus for form like elements (not to be confused with basic :focus style)\\n  outline: none;\\n  box-shadow: 0 0 0 var(--outline-width) var(--outline);\\n  background: var(--input-focus-bg)\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#mesh {\\n  width: 100%;\\n  height: calc(100vh - 165px);\\n\\n  .version {\\n    width: 158px;\\n    height: 80px;\\n    color: #b6b6c2;\\n    text-align: center;\\n\\n    .row {\\n      margin: 0;\\n    }\\n\\n    H4 {\\n      color: #b6b6c2;\\n      display: block;\\n      border-bottom: 1px solid #555;\\n      text-align: left;\\n      padding-bottom: 5px;\\n      margin-bottom: 5px;\\n    }\\n\\n    .sr, .rps, .p99 {\\n      font-size: 20px;\\n\\n      .unit {\\n        font-size: 12px;\\n      }\\n    }\\n\\n    .sr:before, .rps:before, .p99:before {\\n      color: white;\\n      font-weight: bold;\\n      font-size: 15px;\\n      display: block;\\n    }\\n\\n    .sr:before {\\n      content: 'SR';\\n    }\\n\\n    .rps:before {\\n      content: 'RPS';\\n    }\\n\\n    .p99:before {\\n      content: '99%';\\n    }\\n\\n  }\\n\\n  .clusters .label text {\\n    fill: #b6b6c2;\\n    font-weight: bold;\\n  }\\n\\n  .clusters RECT {\\n    fill: #222;\\n    stroke: #555;\\n  }\\n\\n  .arrowhead {\\n    fill: #6c6c76;\\n  }\\n\\n  .node RECT {\\n    fill: #111;\\n    stroke: #555;\\n  }\\n\\n  PATH {\\n    stroke: #6c6c76;\\n  }\\n\\n  .edgePath {\\n    cursor: pointer;\\n  }\\n\\n  .weight1 { stroke-width: 2px; }\\n  .weight2 { stroke-width: 3px; }\\n  .weight3 { stroke-width: 4px; }\\n  .weight4 { stroke-width: 5px; }\\n  .weight5 { stroke-width: 6px; }\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mesh\"},[_vm._m(0),_vm._v(\" \"),_c('svg',{ref:\"mesh\",attrs:{\"id\":\"mesh\"},on:{\"click\":_vm.clicked}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',[_c('h1',[_vm._v(\"App Mesh\")])])}]\n\nexport { render, staticRenderFns }"],"sourceRoot":""}